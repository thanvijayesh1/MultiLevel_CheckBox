{"ast":null,"code":"export function deepCopy(obj) {\n  const result = {};\n  if (typeof obj !== \"object\" || typeof obj === undefined || obj === null || Array.isArray(obj) || typeof obj == \"function\") {\n    return obj;\n  }\n  const keys = Object.keys(obj);\n  for (let key in keys) {\n    result[keys[key]] = deepCopy(obj[keys[key]]);\n  }\n  return result;\n}\nexport const updateChildValuesByParentLabel = (data, condition, newValue, isConditionIsMatch) => {\n  if (data.label === condition.label || isConditionIsMatch === true) {\n    data.value = newValue;\n    if (data.child) {\n      data.child.forEach(child => {\n        child.value = newValue;\n        updateChildValuesByParentLabel(child, child.label, newValue, isConditionIsMatch = true); // Recursively update child's children\n      });\n    } else {\n      data.value = newValue;\n    }\n  } else if (data.child) {\n    data.child.forEach(child => {\n      updateChildValuesByParentLabel(child, condition, newValue, isConditionIsMatch);\n    });\n  }\n  return data; // Return the updated data\n};\n\nexport function setParentValue(node) {\n  if (node.child && node.child.length > 0) {\n    let allChildrenTrue = true;\n    for (const child of node.child) {\n      setParentValue(child);\n      allChildrenTrue = allChildrenTrue && child.value;\n    }\n    node.value = allChildrenTrue;\n  }\n  return node;\n}","map":{"version":3,"names":["deepCopy","obj","result","undefined","Array","isArray","keys","Object","key","updateChildValuesByParentLabel","data","condition","newValue","isConditionIsMatch","label","value","child","forEach","setParentValue","node","length","allChildrenTrue"],"sources":["/home/jayesh/Temp/MultiLevel_CheckBox/src/utitls.js"],"sourcesContent":["export function deepCopy(obj) { \n    const result = {}; \n    if (typeof obj !== \"object\" ||  \n        typeof obj === undefined ||  \n        obj === null ||  \n        Array.isArray(obj) ||  \n        typeof obj == \"function\") { \n        return obj; \n    } \n    const keys = Object.keys(obj); \n    for (let key in keys) { \n        result[keys[key]] = deepCopy(obj[keys[key]]) \n    } \n    return result; \n  } \n\nexport  const updateChildValuesByParentLabel = (data, condition, newValue,isConditionIsMatch) => {\n    if (data.label === condition.label||isConditionIsMatch===true) {\n      data.value=newValue\n      if (data.child) {\n        data.child.forEach((child) => {\n          child.value = newValue;\n          updateChildValuesByParentLabel(child, child.label, newValue,isConditionIsMatch=true); // Recursively update child's children\n        });\n      } else {\n        data.value = newValue; \n      }\n    } else if (data.child) {\n      data.child.forEach((child) => {\n        updateChildValuesByParentLabel(child, condition, newValue,isConditionIsMatch);\n      });\n    }\n    return data; // Return the updated data\n  };\n\n  export function setParentValue(node) {\n    if (node.child && node.child.length > 0) {\n      let allChildrenTrue = true;\n      for (const child of node.child) {\n        setParentValue(child); \n        allChildrenTrue = allChildrenTrue && child.value;\n      }\n      node.value = allChildrenTrue;\n    }\n    return node; \n  }"],"mappings":"AAAA,OAAO,SAASA,QAAQA,CAACC,GAAG,EAAE;EAC1B,MAAMC,MAAM,GAAG,CAAC,CAAC;EACjB,IAAI,OAAOD,GAAG,KAAK,QAAQ,IACvB,OAAOA,GAAG,KAAKE,SAAS,IACxBF,GAAG,KAAK,IAAI,IACZG,KAAK,CAACC,OAAO,CAACJ,GAAG,CAAC,IAClB,OAAOA,GAAG,IAAI,UAAU,EAAE;IAC1B,OAAOA,GAAG;EACd;EACA,MAAMK,IAAI,GAAGC,MAAM,CAACD,IAAI,CAACL,GAAG,CAAC;EAC7B,KAAK,IAAIO,GAAG,IAAIF,IAAI,EAAE;IAClBJ,MAAM,CAACI,IAAI,CAACE,GAAG,CAAC,CAAC,GAAGR,QAAQ,CAACC,GAAG,CAACK,IAAI,CAACE,GAAG,CAAC,CAAC,CAAC;EAChD;EACA,OAAON,MAAM;AACf;AAEF,OAAQ,MAAMO,8BAA8B,GAAGA,CAACC,IAAI,EAAEC,SAAS,EAAEC,QAAQ,EAACC,kBAAkB,KAAK;EAC7F,IAAIH,IAAI,CAACI,KAAK,KAAKH,SAAS,CAACG,KAAK,IAAED,kBAAkB,KAAG,IAAI,EAAE;IAC7DH,IAAI,CAACK,KAAK,GAACH,QAAQ;IACnB,IAAIF,IAAI,CAACM,KAAK,EAAE;MACdN,IAAI,CAACM,KAAK,CAACC,OAAO,CAAED,KAAK,IAAK;QAC5BA,KAAK,CAACD,KAAK,GAAGH,QAAQ;QACtBH,8BAA8B,CAACO,KAAK,EAAEA,KAAK,CAACF,KAAK,EAAEF,QAAQ,EAACC,kBAAkB,GAAC,IAAI,CAAC,CAAC,CAAC;MACxF,CAAC,CAAC;IACJ,CAAC,MAAM;MACLH,IAAI,CAACK,KAAK,GAAGH,QAAQ;IACvB;EACF,CAAC,MAAM,IAAIF,IAAI,CAACM,KAAK,EAAE;IACrBN,IAAI,CAACM,KAAK,CAACC,OAAO,CAAED,KAAK,IAAK;MAC5BP,8BAA8B,CAACO,KAAK,EAAEL,SAAS,EAAEC,QAAQ,EAACC,kBAAkB,CAAC;IAC/E,CAAC,CAAC;EACJ;EACA,OAAOH,IAAI,CAAC,CAAC;AACf,CAAC;;AAED,OAAO,SAASQ,cAAcA,CAACC,IAAI,EAAE;EACnC,IAAIA,IAAI,CAACH,KAAK,IAAIG,IAAI,CAACH,KAAK,CAACI,MAAM,GAAG,CAAC,EAAE;IACvC,IAAIC,eAAe,GAAG,IAAI;IAC1B,KAAK,MAAML,KAAK,IAAIG,IAAI,CAACH,KAAK,EAAE;MAC9BE,cAAc,CAACF,KAAK,CAAC;MACrBK,eAAe,GAAGA,eAAe,IAAIL,KAAK,CAACD,KAAK;IAClD;IACAI,IAAI,CAACJ,KAAK,GAAGM,eAAe;EAC9B;EACA,OAAOF,IAAI;AACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}